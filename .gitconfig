[user]
  name  = James Pogran
  email = james.pogran@puppet.com

[hub]
  protocol = https

[core]
  attributesfile = ~/.gitattributes
  excludesfile = ~/.gitignore

[color]
  ui = always

[color "branch"]
  current = green bold
  local = green
  remote = yellow

[color "diff"]
  frag = magenta
  meta = yellow
  new = green
  old = red

[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = "red bold 52"
  newNormal = "green bold"
  newHighlight = "green bold 22"

[color "status"]
  added = green reverse
  changed = yellow reverse
  untracked = red reverse

[diff "bin"]
  # Use `hexdump` to diff binary files
  textconv = hexdump -v -C

[help]
  # Correct typos
  autocorrect = 1

[pretty]
  custom = "%C(magenta)%h%C(red)%d %C(yellow)%ar %C(green)%s %C(yellow)(%an)"
  #                     │        │            │            │             └─ author name
  #                     │        │            │            └─ message
  #                     │        │            └─ date (relative)
  #                     │        └─ decorations (branch, heads or tags)
  #                     └─ hash (abbreviated)

# Use separate file for username / github token / etc
[include]
  path = ~/.gitconfig.local

[alias]
  lg = "log --pretty=format:'%C(yellow)%h%C(reset) %s %C(cyan)%cr%C(reset) %C(blue)%an%C(reset) %C(green)%d%C(reset)' --graph --date-order"
  # View abbreviated SHA, description, and history graph of the latest 20 commits
  l  = log --pretty=oneline -n 20 --graph --abbrev-commit
  ll = log --oneline -n 20
  ln = "log --pretty=format:'%C(yellow)%h%C(reset) %s %C(cyan)%cr%C(reset) %C(blue)%an%C(reset) %C(green)%d%C(reset)' --name-only --date-order"

  # View the current working tree status using the short format
  s  = status -s
  st = status

  # Show verbose output about tags, branches or remotes
  tags     = tag -l
  branches = branch -a
  remotes  = remote -v

  # Amend the currently staged files to the latest commit
  amend  = commit --amend --reuse-message=HEAD
  up     = !git fetch origin && git rebase origin/master
  co     = checkout
  cob    = checkout -b
  cot    = checkout -t
  undo   = reset HEAD~1 --mixed

  pr     = "!f() { git fetch origin pull/$1/head:$1 && git co $1; }; f"
  bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs git branch -d; }; f"
  bdone  = "!f() { git checkout ${1-master} && git up && git bclean ${1-master}; }; f"
