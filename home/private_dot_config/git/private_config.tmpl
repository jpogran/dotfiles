[branch]
	sort = -committerdate
	autosetupmerge = always
	autosetuprebase = always
[column]
	ui = auto
[commit]
	gpgsign = true
	verbose = true
[core]
	commit = verbose
	editor = code --wait
[credential "https://github.com"]
	helper = !/opt/homebrew/bin/gh auth git-credential
[credential "https://gist.github.com"]
	helper = !/opt/homebrew/bin/gh auth git-credential
[diff]
	algorithm = histogram
	colorMoved = plain
	mnemonicPrefix = true
	renames = true
[fetch]
		prune = true
		pruneTags = true
[format]
		signOff = true
[help]
	autocorrect = prompt
[log]
	date = iso
	showSignature = false
[init]
	defaultBranch = main
[gpg]
	format = ssh
[gpg "ssh"]
	program = /Applications/1Password.app/Contents/MacOS/op-ssh-sign
	allowedSignersFile = ~/.config/git/allowed_signers
[merge]
	conflictstyle = zdiff3
[pull]
	rebase = true
	ff = only
[push]
	default = simple
	autoSetupRemote = true
[rebase]
	autoStash = true
	updateRefs = true
	autoSquash = true
[rerere]
	enabled = true
	autoupdate = true
[tag]
	sort = version:refname
[user]
	signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINIQOgKqcherblK3kxZGvZ32tIdSLI1iUMOnWX62bQiu
	name = James Pogran
	email = jpogran@outlook.com
[credential "https://github.com"][alias]
	pushfwl            = push --force-if-includes
  amend              = commit --amend --reuse-message=HEAD
  branches           = branch -a
  co                 = checkout
  cob                = checkout -b
  cot                = checkout -t
  commit             = commit -v
  cm                 = commit -v -m
	s                  = status -s
  st                 = status
  tags               = tag -l
  remotes            = remote -v
  undo               = reset HEAD~1 --mixed
	ri                 = !git rebase -i (git log --format=format:'%H'  -n 1 main)
	l                  = log  -n 10 --pretty=\"%C(magenta)%h%C(red)%d %C(yellow)%ar %C(green)%s %C(yellow)(%an)\"
  lg                 = log --graph --pretty=\"%C(magenta)%h%C(red)%d %C(yellow)%ar %C(green)%s %C(yellow)(%an)\"
  ll                 = log --oneline -n 20
  ln                 = "log --pretty=format:'%C(yellow)%h%C(reset) %s %C(cyan)%cr%C(reset) %C(blue)%an%C(reset) %C(green)%d%C(reset)' --name-only --date-order"
  # commits in short form, with colors and branch/tag annotations, and file changes
  lf                 = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	# Maintenance aliases
	cleanup            = !git remote prune origin && git gc && git clean -df && git stash clear
	obliterate         = !sh -c 'git filter-branch --force --index-filter \"git rm --cached --ignore-unmatch $1\" --prune-empty --tag-name-filter cat -- --all' -
	ignore             = !gi() { curl -sL https://www.toptal.com/developers/gitignore/api/$@ ;}; gi
	# Workflow aliases
	wip                = !git add -A && git commit -m "WIP: work in progress"
	unwip              = !git log -n 1 | grep -q -c "WIP" && git reset HEAD~1
	# Show changed files in last commit
	dl                 = diff --name-only HEAD~1 HEAD
