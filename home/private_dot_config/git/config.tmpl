[core]
  editor = {{ .editor }}
  commit = verbose
{{- if eq .chezmoi.os "windows" }}
  sshCommand = c:/Program Files (x86)/OpenSSH/ssh.exe
{{ end }}
[user]
  name       = {{ .fullname | quote }}
  email      = {{ .email | quote }}
  signingkey = {{ onepasswordRead "op://private/Github/public_key" | quote }}
[gpg]
  format = ssh
[gpg "ssh"]
  allowedSignersFile = ~/.ssh/allowed_signers
{{- if eq .chezmoi.os "darwin" }}
  program            = "/Applications/1Password.app/Contents/MacOS/op-ssh-sign"
{{ end -}}
{{- if eq .chezmoi.os "windows" }}
  program            = c:/Program Files (x86)/OpenSSH/ssh-keygen.exe
{{ end -}}
[init]
  defaultBranch = "main"
[push]
  default = current
[shell]
  username = {{ .username }}
[github]
  username = {{ .username }}
[commit]
  verbose = true
  gpgsign = true
[tag]
  gpgsign = true
[color]
  ui          = auto
  status      = auto
  branch      = auto
  interactive = auto
  diff        = auto
[diff]
  tool    = vscode
  renames = copies
[difftool "vscode"]
  prompt = false
  cmd    = code --wait --diff $LOCAL $REMOTE
[merge]
  tool = vscode
[mergetool "vscode"]
  cmd = code --wait $MERGED
[pull]
  rebase = true
[rebase]
  autostash = true
[alias]
  amend    = commit --amend --reuse-message=HEAD
  branches = branch -a
  co       = checkout
  cob      = checkout -b
  cot      = checkout -t
  commit   = commit -v
  cm       = commit -v -m
  l        = log  -n 10 --pretty=\"%C(magenta)%h%C(red)%d %C(yellow)%ar %C(green)%s %C(yellow)(%an)\"
  lg       = log --graph --pretty=\"%C(magenta)%h%C(red)%d %C(yellow)%ar %C(green)%s %C(yellow)(%an)\"
  ll       = log --oneline -n 20
  ln       = "log --pretty=format:'%C(yellow)%h%C(reset) %s %C(cyan)%cr%C(reset) %C(blue)%an%C(reset) %C(green)%d%C(reset)' --name-only --date-order"
  s        = status -s
  st       = status
  tags     = tag -l
  remotes  = remote -v
  undo     = reset HEAD~1 --mixed
  ri       = rebase -i  $(git log --format=format:'%H'  -n 1 main)

	a = add
	s = status
	st = status
	ci = commit
	b = branch
	co = checkout
	re = remote
	d = diff
	dc = diff --cached
	lol = log --graph --decorate --pretty=oneline --abbrev-commit
	lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
	ls = ls-files
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	lgi = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ci) %C(bold blue)<%an>%Creset' --abbrev-commit
	# Pull Upstream
	pu = !"git fetch origin -v; git fetch upstream -v; git merge upstream/master"
	# Commit Amend Reuse Message HEAD
	carmh = commit --amend --reuse-message=HEAD
	# Push Current
	pc = !"f() { remote=\"${1:-origin}\"; git push -u \"$remote\" $(git rev-parse --abbrev-ref HEAD); }; f"
	# Push Current Force
	pcf = !"f() { echo git pc \"$@\" -f; }; f"
	# Mainly for YADM
	untracked = !"f() { git status --porcelain=v1 -zunormal | xargs -0n1 printf \"%s\\n\" | grep -E '^\\?\\? \\.' | cut -c4-; }; f"
	# Current branch
	current = rev-parse --abbrev-ref HEAD
	cof = !git for-each-ref --format='%(refname:short)' refs/heads | fzf | xargs git checkout
[pager]
	log = false
[url "https://github.com/hashicorp"]
	insteadOf = git@github.com:hashicorp
